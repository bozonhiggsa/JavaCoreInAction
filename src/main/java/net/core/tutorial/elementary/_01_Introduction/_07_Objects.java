package net.core.tutorial.elementary._01_Introduction;

/**

 Класс java.util.Objects.

 Класс содержит утилитарные методы для работы с объектами.

 .hashCode(Object a) – статический метод, генерирует хеш коды для последовательности входных значений. Использует метод Arrays.hashCode.values().

 .hash(Object... values) – статический метод, возвращающий хеш код в виде int для аргумента, который не null или возвращающий 0. если аргумент null.

 .equals(Object a, Object b) – статический метод, возвращающий булевое значение, сравнивая два объекта. true если это один и тот же объект или если это два null, а также если это разные объекты с одинаковым содержимым, для которых переопределён метод .equals(). В частности, массивы не переопределяют метод .equals(), поэтому сравнивать их содержимое таким способом нельзя.

 .deepEquals(Object a, Object b) – статический метод, сравнение содержимого двух объектов. Использует метод Arrays.deepEquals0(a, b), который сам определяет тип аргумента (примитивные типы данных или Object) через instanceof и использует подходящий для данного типа данных метод из класса Arrays.

 .toString(Object o) – статический метод, возвращающий String, полученный из String.valueOf(o).

 .toString(Object o, String nullDefault) – статический метод, если первый аргумент не null, то возвращает o.toString, иначе возвращает строку второго аргумента.

 .compare(T a, T b, Comparator<? super T> c) – статический метод, возвращает <T> int. Если a и b это один и тот же объект, то возвращает 0, иначе используется дженерифицированный любым предком T компаратор и используется метод c.compare(a, b), объявленный в интерфейсе Comparator.

 .requireNonNull(T obj) – статический метод, возвращает <T> T. Если obj равен null, то кидается исключение NullPointerException, иначе возвращается obj. Во второй реализации этого метода используется второй аргумент message, который добавляется при выкидывании исключения.

 */

public class _07_Objects {

    public static void main(String[] args) {

        
    }
}

package net.core.tutorial.elementary._11_SOLID;

/**

 Dependency Inversion Principle (Принцип инверсии зависимостей).
 Объектом зависимости должна быть абстракция, а не что-то конкретное.

 1. Модули верхних уровней не должны зависеть от модулей нижних уровней. Оба типа модулей должны зависеть от абстракций.
 2. Абстракции не должны зависеть от деталей. Детали должны зависеть от абстракций.

 В процессе разработки программного обеспечения существует момент, когда функционал приложения перестаёт
 помещаться в рамках одного модуля. Когда это происходит, приходится решать проблему зависимостей модулей.
 В результате может оказаться, что высокоуровневые компоненты зависят от низкоуровневых компонентов.

 Классы верхних уровней не должны в своих конструкторах или методах получать в виде аргументов или использовать
 типы классов более низких уровней, чтобы не зависеть от них.
 Если впоследствии надо будет заменить реализацию класса нижнего уровня на другую, то потребуется изменять
 код класса верхнего уровня.
 Вместо этого необходимо создавать интерфейсы (абстракции), вынуждать классы нижних уровней имплементировать эти
 интерфейсы и передавать в качестве аргументов в классы верхних уровней именно реализации таких абстракций,
 используя их базовый тип.

 */

public class _05_SOLID5 {
}
